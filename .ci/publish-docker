#!/usr/bin/env bash

set -eux

IMAGESOURCE="build/release"

# well...trust the thing you are in the middle of deploying, ok?
eval "$(docker run --rm=true "${IMAGESOURCE}" cat /etc/facter/facts.d/baseimage.txt)"

tags=("latest"
      "${base_image_timestamp}"
      "${base_image_timestamp}.${base_image_coderev}")

set_tags () {
  local imgpath="${1}"
  for tag in "${tags[@]}" ; do
    docker tag "${IMAGESOURCE}" "${imgpath}:${tag}"
  done
}

push_tags () {
  local imgpath="${1}"
  for tag in "${tags[@]}" ; do
    docker push "${imgpath}:${tag}"
  done
}

# public release image?
[ "${RELEASE_IMAGE:-}" ] && {
  set +x
  { [ "${DOCKER_LOGIN:-}" ] && [ "${DOCKER_PASSWORD:-}" ] ; } || { echo "missing docker credentials" 1>&2 ; exit 1 ; }

  echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_LOGIN}" --password-stdin "${RELEASE_IMAGE%%/*}"
  set -x

  set_tags "${RELEASE_IMAGE}"

  push_tags "${RELEASE_IMAGE}"
}

# gitlab release image?
[ "${GITLAB_RELEASE_IMAGE:-}" ] && {
  set +x
  [ "${CI_JOB_TOKEN:-}" ] || { echo "missing CI_JOB_TOKEN" 1>&2 ; exit 1 ; }

  echo "${CI_JOB_TOKEN}" | docker login -u gitlab-ci-token --password-stdin "${GITLAB_RELEASE_IMAGE%%/*}"
  set -x

  set_tags "${GITLAB_RELEASE_IMAGE}"

  push_tags "${GITLAB_RELEASE_IMAGE}"
}
